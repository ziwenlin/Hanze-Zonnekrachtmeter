
# 1 "src/DS18B20.c"

# 8 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 7 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files (x86)\Microchip\xc8\v1.33\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);




extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);


extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 10 "src/onewire.h"
void onewireWriteBit(int b);
unsigned char onewireReadBit();
unsigned char onewireInit();
unsigned char onewireReadByte();
void onewireWriteByte(char data);
unsigned char onewireCRC(unsigned char* addr, unsigned char len);

# 9 "src/DS18B20.h"
void broadcastConvert();
float getTemperature(unsigned char* address);
int getTemperatureInt(unsigned char* address);
void printSingleAddress();

# 6 "src/DS18B20.c"
void broadcastConvert() {

onewireInit();
onewireWriteByte(0xCC);
onewireWriteByte(0x44);

while (1) {
if (onewireReadBit())
break;
}
}

# 21
float getTemperature(unsigned char* address) {

float temperature;
unsigned char scratchPad[9] = {0,0,0,0,0,0,0,0,0};

onewireInit();
onewireWriteByte(0x55);
unsigned char i;
for (i = 0; i < 8; i++)
onewireWriteByte(address[i]);
onewireWriteByte(0xBE);

for (i = 0; i < 2; i++) {
scratchPad[i] = onewireReadByte();
}
onewireInit();
temperature = ((scratchPad[1] * 256) + scratchPad[0])*0.0625;

return temperature;
}

int getTemperatureInt(unsigned char* address) {

int temperature;
unsigned char scratchPad[9] = {0,0,0,0,0,0,0,0,0};

onewireInit();
onewireWriteByte(0x55);
unsigned char i;
for (i = 0; i < 8; i++)
onewireWriteByte(address[i]);
onewireWriteByte(0xBE);

for (i = 0; i < 2; i++) {
scratchPad[i] = onewireReadByte();
}
onewireInit();
temperature = ((scratchPad[1] * 256) + scratchPad[0]);

return temperature;
}

# 66
void printSingleAddress() {
onewireInit();

unsigned char address[8]= {0,0,0,0,0,0,0,0};
onewireWriteByte(0x33);
unsigned char i;
for (i = 0; i<8; i++)
address[i] = onewireReadByte();
for (i = 0; i<8; i++)
printf("0x%x,",address[i]);


unsigned char crc = onewireCRC(address, 7);
printf("crc = %x \r\n",crc);
}
